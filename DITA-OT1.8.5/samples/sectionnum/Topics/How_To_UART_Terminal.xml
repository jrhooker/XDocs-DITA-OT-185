<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA 1.2 Topic//EN" "/SysSchema/dita/dtd/technicalContent/dtd/topic.dtd">
<topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" base="base" id="xd_7e3bf9c2b403adbd-1a052180-15fe545df21--7a9e" xml:lang="en-US">
  <title>How To Use UART Terminal with Archsim</title>

  <body>
    <p>The simulator tries to open named pipes "uart_console_in" and
    "uart_console_out" to mimic an external terminal's receive and transmit
    byte streams. If these files are not found, then the simulator assumes
    that the UART is being used for logging rather than interaction with a
    user terminal. In this case, UART output (the log text) goes to ArchSim
    stdout and there is no input stream.</p>

    <p>If you want to quickly simulate terminal interaction with an
    application like DiagMgr or Hello World with ArchSim:</p>

    <ol>
      <li><p>Compile UART terminal simulator.</p><p><cmdname>&gt; make -C
      simulator/hostsim/applications/uartsim
      clean</cmdname></p><p><cmdname>&gt; make -C
      simulator/hostsim/applications/uartsim all </cmdname></p></li>

      <li><p>Create named pipes in the working directory where you will launch
      the simulator.</p><p><cmdname>&gt; cd
      simulator/archsim</cmdname></p><p><cmdname>&gt; mknod uart_console_in
      p</cmdname></p><p><cmdname>&gt; mknod uart_console_out
      p</cmdname></p></li>

      <li> Launch ArchSim, which will look in the present working directory
      for the pipes. </li>

      <li><p>In a separate Unix window, go to the same directory and run
      <cmdname>"uartsim"</cmdname> to start a simple terminal simulation. The
      terminal simulator will will open the other end of the
      pipes.</p><p><cmdname>&gt; cd
      simulator/archsim</cmdname></p><p><cmdname>&gt; cp
      ../hostsim/applications/uartsim/uartsim .</cmdname></p><p><cmdname>&gt;
      ./uartsim</cmdname></p></li>

      <li><p>Use <cmdname>control-X</cmdname> to exit from the terminal
      emulator when you are done. <cmdname>Control-C</cmdname> is trapped and
      passed through to the UART.</p></li>
    </ol>

    <p>If it is not convenient to run the terminal emulation from the ArchSim
    runtime directory, you can tell <cmdname>uartsim</cmdname> where to look
    for the pipe files. The formal command syntax is:</p>

    <p><cmdname>uartsim [&lt;display-input-pipe&gt;
    [&lt;keyboard-output-pipe&gt;]] </cmdname></p>

    <p>Default for <cmdname>&lt;display-input-pipe&gt;</cmdname> is
    "uart_console_in"</p>

    <p>Default for <cmdname>&lt;keyboard-output-pipe&gt;</cmdname> is
    "uart_console_out"</p>
  </body>
</topic>