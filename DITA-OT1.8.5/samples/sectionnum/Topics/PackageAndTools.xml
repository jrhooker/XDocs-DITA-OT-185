<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA 1.2 Topic//EN" "/SysSchema/dita/dtd/technicalContent/dtd/topic.dtd">
<topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" base="Morristown" id="topic_Package_and_Tools_2j79ej618" xml:lang="en-US">
  <title>Installation</title>

  <body>
    <p>This section describes hints and tips related to developing under
    Linux, in addition to the development tools, Architecture Simulator and
    firmware installation procedures.</p>
  </body>

  <topic id="topic_Linux_Tips_3j79eotgn">
    <title>Linux Tips</title>

    <body>
      <p>The development tools are supported on CentOS (RHEL) 6.9 64-bit. It
      is recommended to install CentOS as <b>"Software Development
      Workstation"</b> and this guide was written with the assumption that the
      CentOS was installed as <b>"Software Development Workstation"</b>. After
      installation of CentOS 6.9, do not perform any updates to the OS,
      otherwise the attempt to install additional packages required by the
      firmware build utilities and build environment mentioned in the
      following will not succeed.</p>

      <p/>

      <note>For any other CentOS version installation, additional packages may
      need to be installed.</note>

      <p>ARM development tools require gcc 4.8, but the default gcc version is
      4.4 for CentOS 6.</p>

      <p>The following additional packages are required by the firmware build
      utilities and build environment:</p>

      <ul>
        <li><p><cmdname>yum install
        glibc-2.12-1.212.el6.i686</cmdname></p></li>

        <li><p><cmdname>yum install
        libgcc-4.4.7-18.el6.i686</cmdname></p></li>

        <li><p><cmdname>yum install
        libstdc++-4.4.7-18.el6.i686</cmdname></p></li>

        <li><p><cmdname>yum install zlib-1.2.3-29.el6.i686</cmdname></p></li>

        <li><p><cmdname>yum install glibc-devel.i686</cmdname></p></li>

        <li><p><cmdname>yum install pciutils-devel.i686</cmdname></p></li>

        <li><p><cmdname>yum install gtk2.i686</cmdname></p></li>

        <li><p><cmdname>yum install gtk2-devel.i686</cmdname></p></li>

        <li><p><cmdname>yum install libXtst.i686</cmdname></p></li>
      </ul>

      <note>Root user access privileges may be required for installation of
      the above packages.</note>

      <p>Centos.org has built the "<i>redhat developer toolset 2</i>" that
      contains gcc 4.8.2. Use this repository to install gcc 4.8 as shown in
      the following example.</p>

      <ul>
        <li><p><cmdname>wget
        http://people.centos.org/tru/devtools-2/devtools-2.repo -O
        /etc/yum.repos.d/devtools-2.repo</cmdname></p></li>

        <li><p><cmdname>yum install devtoolset-2-gcc devtoolset-2-binutils
        devtoolset-2-gcc-c++</cmdname></p></li>
      </ul>

      <note>In order for <cmdname>yum</cmdname> to work correctly the proxy
      settings in <filepath>/etc/yum.conf</filepath> must be correct.</note>
    </body>
  </topic>

  <topic id="topic_Development_Tools_4j79es3ar">
    <title>Development Tools</title>

    <body>
      <p>The version numbers of the tools mentioned in the following are
      tested and installation of any other version of the tools may lead to
      undesirable results.</p>

      <ul>
        <li><p>DS-5 Ultimate Edition</p><p>Download and install the DS-5
        development studio v5.28.1 from</p><xref href="https://developer.arm.com/products/software-development-tools/ds-5-development-studio/downloads" type="external"/><p><note>Different versions of DS-5 other than
        v5.28.1 are not compatible with the required versions of FastModels
        10.2 with GCC 4.8.</note><note> Warnings on missing 32-bit library
        dependencies are ignored during the installation, as they don't affect
        DS-5 normal operation. For more information, see <xref href="https://static.docs.arm.com/100950/0527/getting_started_guide_100950_0527_00_en.pdf" type="external"/>.</note></p></li>

        <li><p>Xtensa tools</p><p sp-version="VersionA">Download the latest
        version of the development tools package from Cadence, that is
        Xplorer-7.0.8-linux-installer.bin</p><p sp-version="VersionB">Download
        the latest version of the development tools package from Cadence, that
        is Xplorer-7.0.8-linux-installer.bin</p><p>Installing the development
        tools is a multi-step process, described below:</p><ol>
            <li>Xtensa Xplorer<ul>
                <li>To install Xtensa Xplorer and the Xtensa development
                tools, execute
                <filepath>Xplorer-&lt;version&gt;-linux-installer.bin</filepath>.</li>
              </ul></li>

            <li>XOCD<ul>
                <li>XOCD is the Xtensa On-chip Debug Daemon that is required
                for hardware debugging. The latest version of XOCD should be
                downloaded from Cadence.</li>
              </ul></li>

            <li>Configuring your environment<ul>
                <li>Xtensa Xplorer licenses are checked automatically as
                needed. If no licenses are found, Xplorer prompts you to
                configure licenses. See section 4.5 of the <i>Xtensa
                Development Tools Installation Guide</i>
                (dev_tools_install_guide.pdf) for more information.</li>
              </ul></li>

            <li>Once installed and started Xplorer will automatically check
            for updates. Install any updates that are automatically
            detected.</li>

            <li>There is a core configuration needed to be installed for
            microcode. These values will be used by the current archsim
            makefile<ul sp-version="VersionA">
                <li>Belmar_fc_rev6_tie11_PROD_linux_redist.tgz</li>
              </ul><ul sp-version="VersionB">
                <li>Morristown_rev0_tie11</li>
              </ul></li>
          </ol></li>

        <li><p>Xtensa core configuration
        install</p><p>Belmar_fc_rev6_tie11_PROD_linux_redist.tgz<b sp-version="VersionB">Morristown_rev0_tie11_redist.tgz</b> is the file
        containing the Flash channel core configuration.</p><p>The following
        steps describe how to install the core configuration using
        <b>xplorer</b>.</p><ol>
            <li><p>Look for <b>System Overview</b> window. If it does not
            exist, open <b>Window</b> in the menu tab. Then open <b>Show
            View</b>, and lastly, select <b>System Overview</b>.</p><fig>
                <title>System Overview Menu</title>

                <image href="../Graphics/xplorer_system_overview_menu.PNG" width="455"/>
              </fig><fig>
                <title>System Overview Window</title>

                <image href="../Graphics/xplorer_system_overview.PNG"/>
              </fig><p/></li>

            <li><p>In the <b>System Overview</b> window, select
            <b>Configurations</b> and right-click. From the new optiond
            displayed, select <b>Find and Install a Configuration
            Build</b>.</p><fig>
                <title>System Overview Configuration Option</title>

                <image href="../Graphics/xplorer_system_overview_option.PNG"/>
              </fig><p/></li>

            <li><p>The following figure shows the currently installed
            configurations under the <b sp-version="VersionA">RG-2017.8</b><b sp-version="VersionB">RG-2017.8</b> tool that came installed with
            <b sp-version="VersionA">Xplorer-7.0.8</b><b sp-version="VersionB">Xplorer-7.0.8</b>. Select <b>Browse</b> to
            look for flash channel core configuration, for example, <b sp-version="VersionA">Belmar_fc_rev6_tie11_PROD_linux_redist.tgz</b><b sp-version="VersionB">Morristown_rev0_tie11_redist.tgz</b>.
            </p><fig>
                <title>Find and Install a Configuration Build</title>

                <image href="../Graphics/xplorer_find_and_install_config.PNG" width="449"/>
              </fig><p>After finding the correct core configuration file,
            click <b>OK</b> to install.</p><fig>
                <title>Install core configuration</title>

                <image href="../Graphics/xplorer_install_core_config.PNG" width="455"/>
              </fig></li>

            <li><p>The following figure shows the System Overview window with
            the newly installed flash channel core configuration.</p><fig>
                <title>Core Configuration Installation Complete</title>

                <image href="../Graphics/Installation_RG-2017.8_Snippet.JPG" width="386"/>
              </fig><p/></li>
          </ol></li>

        <li><p>FastModel</p><p>Download and install the FastModels 10.2 and
        the third party package. The download link for the FastModels package
        is available upon request from ARM (<xref href="https://developer.arm.com/support" type="external">ARM
        support</xref>), and requires a license to build and run.</p><note>It
        is recommended to install FastModels from ARM and the third party
        package in the same path.</note></li>

        <li><p>Licensing</p><p>The following licenses are required from ARM
        for running an instance of the architectural simulator:<ul>
            <li><p>Required to Build and Debug Firmware</p><p>ARM DS-5
            Ultimate Edition License (Number of Licenses Required:
            1)</p><p>Refer to "ARM DS-5 License Management Guide" at <xref href="https://developer.arm.com/products/software-development-tools/ds-5-development-studio/docs" type="external"/> to get information on how to Request, Configure
            and Install the license.</p><p><note>Licenses for the DS-5 tools
            should be obtained directly from ARM.</note></p></li>

            <li><p>Required to Build the FastModels</p><p>MaxCore_SystemGen
            (Number of Licenses Required: 1)</p></li>

            <li><p>Required to Run the Simulation</p><p>FM_Simulator (Number
            of Licenses Required: 1)</p><p>SG_v7SystemIP_CT (Number of
            Licenses Required: 1)</p><p>SG_ARM_Cortex-A53_CT (Number of
            Licenses Required: 4 [1 per A53 cluster])</p></li>

            <li><p>Required to build/run microcode (FCC)</p><p>The Xtensa
            development tools are licensed through FLEXlm. FLEXlm operates in
            two different modes: node-locked and floating (networked). The
            license installation procedure varies depending on whether you are
            using node-locked or floating licenses. To install and manage
            licenses for the Xtensa software, follow the instructions in
            section 4 of the <i>Xtensa Development Tools Installation
            Guide</i> (dev_tools_install_guide.pdf). The following licenses
            may be required:</p><ul>
                <li>XTENSA_SDK - required for compilation and debugging.
                Recommended to have one license per development engineer.</li>

                <li>XT_ISS_XTMP - required to run the Architectural Simulator
                (ArchSim)</li>

                <li>XT_ISS_TURBO - required to improve the speed of the
                Architectural Simulator (ArchSim)</li>

                <li>No additional license required for on-chip debugging</li>
              </ul><note>Obtain licenses for the Xtensa tools directly from
            Cadence.</note></li>
          </ul></p></li>
      </ul>
    </body>
  </topic>

  <topic id="topic_Architectural_Simulator_8j79g61nc">
    <title>Simulator</title>

    <body>
      <p>Download the latest version of the simulator package from myPMC, that
      is PM71_85_270_simulator_x.y.z.tgz, and extract its contents.</p>

      <p>The architectural simulator (ArchSim) and the host simulator
      (HostSim) are distributed as tar-balls, PM71_85_270_archsim_x.y.z.tgz
      and PM71_85_270_hostsim_x.y.z.tgz respectively, within the simulator
      package downloaded from myPMC. To install ArchSim and HostSim, extract
      the contents of the tar-balls.</p>

      <p><xref href="Compilation.xml#topic_Architectural_Simulator_8j79g61nc"/>
      explains the required environment variable settings for the
      simulator.</p>
    </body>

    <topic id="Argtable_8hs3iqqay">
      <title>Argtable</title>

      <body>
        <p>The Block Layer Simulator (BSim) relies on the argtable2
        third-party shared library. This library must be downloaded, compiled,
        and installed before compiling BSim.</p>
      </body>
    </topic>
  </topic>

  <topic id="topic_Firmware_6j79f5zwr">
    <title>Firmware</title>

    <body>
      <p>To install the firmware for DS-5 Development studio, open the DS-5
      Development studio from <filepath>&lt;DS-5 Directory&gt;/bin</filepath>.
      For example, <filepath>/DS-5_v5.28.1/bin/eclipse</filepath>.</p>

      <p>The firmware sources are packaged as a DS-5 workspace project. The
      project is included in the PM71_85_270_sdk_x.y.z.tgz package that is
      downloaded from myPMC.</p>

      <p>Installation of Firmware Package for DS-5 development studio is
      performed in two steps:</p>

      <ol>
        <li><p>Untar the PM71_85_270_sdk_x.y.z.tgz file.</p></li>

        <li><p>Import the project into Workspace.</p></li>
      </ol>
    </body>

    <topic id="PackageAndTools-2">
      <title>Untar the PM71_85_270_sdk_x.y.z.tgz file</title>

      <body>
        <p>Extract the PM71_85_270_sdk_x.y.z.tgz to the desired location. The
        contents of the firmware package are under the PM71_85_270_sdk_x.y.z
        folder, which serves as the firmware root directory.</p>
      </body>
    </topic>

    <topic id="PackageAndTools-4">
      <title>Import the Project into Workspace</title>

      <body>
        <p>Importing a project will install the firmware sources. To import
        the project into the DS-5 workspace, select <b>File</b> and from the
        pull down menu click <b>Import</b>. Import Dialog appears.</p>

        <fig>
          <title>Import Dialog</title>

          <image href="../Graphics/Import_Dialog.png"/>
        </fig>

        <p>Select <b>General and </b>choose<b> Existing Projects into
        Workspace</b> and click <b>Next</b>.</p>

        <p>From the Import Dialog under <b>Select root directory</b>, choose
        the location of PM71_85_270_sdk_x.y.z folder. <b>Morristown</b> is
        selected by default under Projects (if not, select the
        <b>Morristown</b> project by clicking on the check box).</p>

        <fig>
          <title>Import Projects Dialog</title>

          <image href="../Graphics/Import_Project_dialog.png"/>
        </fig>

        <p>Now click <b>Finish</b>.</p>

        <fig>
          <title>Imported Project</title>

          <image href="../Graphics/Imported_project2.PNG"/>
        </fig>

        <p>Congratulations, you have successfully imported the project into
        the workspace.</p>
      </body>
    </topic>
  </topic>
</topic>