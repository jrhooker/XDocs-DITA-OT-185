<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA 1.2 Topic//EN" "/SysSchema/dita/dtd/technicalContent/dtd/topic.dtd">
<topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" base="Morristown" id="topic_Firmware_Debugging_in_Simulation_3j7gegegf" xml:lang="en-US">
  <title>Firmware Debugging in Simulation</title>

  <body>
    <p>This section describes the procedure to initiate a firmware debugging
    session using the simulator (Archsim), once the firmware has been compiled
    for simulation (all_sim or debug_sim make targets).</p>

    <p/>
  </body>

  <topic id="topic_Run_the_Archsim_4j7gg4x63">
    <title>Launch Archsim</title>

    <body>
      <p>Steps to run Archsim from a terminal once the compilation is
      complete:</p>

      <ol>
        <li><p>From the <b>Command terminal window</b>, go to the folder where
        the Archsim is unpacked "<filepath>simulator/archsim</filepath>" and
        issue the following command:</p><p><cmdname>make isim_launch
        TCP_IP_PORT_BASE=&lt;TCP_IP_Port&gt;
        CADI_PORT=&lt;70xx&gt;</cmdname></p><p>If you wish to start Archsim
        with dual port support, specify this simCfg file as an
        argument:</p><p> <cmdname>make isim_launch
        TCP_IP_PORT_BASE=&lt;TCP_IP_Port&gt; CADI_PORT=&lt;70xx&gt;
        SIMCFGFILE=simCfg_dualport.txt</cmdname></p><p>Port numbers 1024 to
        65535 are valid TCP IP Ports. Port Numbers 7000 to 7063 are valid CADI
        ports. </p><fig>
            <title>Command Terminal Window</title>

            <image href="../Graphics/archsim_launch.png" width="500"/>
          </fig><p>There is another way to launch Archsim and the firmware
        together if firmware debugging is not required. In the same folder,
        after building the Archsim and the firmware, issue the following
        command to run with the SDK firmware
        image:</p><p><cmdname>./A53x4_clusts4_CCN502.x -a
        "pm8627_SC_subsys_i.pm8627_SC_subsys_internal_i.coreSystem.cluster*"=&lt;Path
        to SDK&gt;/firmware/release/archsim/sdk.axf --run --tcpIpPortBase
        &lt;TCP_IP_Port&gt;</cmdname></p><p>-a is the option to set the
        firmware (*.axf) image. --run is the option to start the firmware.
        --tcpIpPortBase is the option to set the port to connect
        bsim.</p><p>The FCC microcode will be loaded automatically by Archsim
        if the simCfg file is using the fcc parameter, which includes the path
        to the microcode file. By default the simCfg file uses the directory
        firmware/fcc/fcc_images as the location of fccNode.elf.</p></li>

        <li><p>The following image shows that Archsim is currently running. It
        may take a few minutes for the SDK to start running.</p><fig>
            <title>Archsim Running</title>

            <image href="../Graphics/archsim_running.png" width="500"/>
          </fig></li>
      </ol>
    </body>
  </topic>

  <topic id="topic_Run_the_Firmware_5j7gg55je">
    <title>Run Firmware</title>

    <body>
      <p>Steps to run the firmware using DS-5 debugger:</p>

      <ol>
        <li><p>In the <b>DS-5 development studio</b>, select the following
        menu "<b>File-&gt;New-&gt;Other...</b>" as shown in the following
        image.</p><fig>
            <title>DS-5 Development Studio</title>

            <image href="../Graphics/DS5_config_create.png" width="400"/>
          </fig><p/></li>

        <li><p>In the wizard, select <b>Configuration Databas</b><b>e</b> and
        press <b>Next</b> as shown in the following image.</p><fig>
            <title>DS-5 Configuration Database</title>

            <image href="../Graphics/DS5_config_database.png" width="400"/>
          </fig><p/></li>

        <li><p>Provide a name to this new configuration, for example,
        "<i>archsim</i>" in <b>Database Name</b> and select
        <b>Finish.</b></p><fig>
            <title>New Configuration Database</title>

            <image href="../Graphics/DS5_config_name.png" width="400"/>
          </fig><p/></li>

        <li><p>Again from the DS-5 studio, go to
        "<b>File-&gt;New-&gt;Other...</b>" and select "<b>Model
        Configuration</b>".</p><fig>
            <title>Model Configuration</title>

            <image href="../Graphics/DS5_model_create.png" width="400"/>
          </fig><p/></li>

        <li><p>Select the database created earlier and press
        <b>Next.</b></p><fig>
            <title>New Model</title>

            <image href="../Graphics/DS5_model_database.png" width="400"/>
          </fig><p/></li>

        <li><p>Select the <b>Browse for model running on local host</b> option
        and press <b>Next.</b></p><fig>
            <title>New Model Connection</title>

            <image href="../Graphics/DS5_model_archsim.png" width="400"/>
          </fig><p/></li>

        <li><p>From the list of models, select the Archsim model run earlier
        (see <xref href="#topic_Run_the_Archsim_4j7gg4x63"/>). In the
        following example it is "7009", select and click
        <b>Finish.</b></p><fig>
            <title>Model Browser</title>

            <image href="../Graphics/DS5_model_select.png" width="550"/>
          </fig><p/></li>

        <li><p>Once the Model is selected, this opens the coreSystem window as
        shown in the following image. Press the following buttons in the
        following order <b>Save</b> then <b>Import</b> and then
        <b>Debug</b>.</p><p/><fig>
            <title>CoreSystem</title>

            <image href="../Graphics/DS5_model_config.png" width="500"/>
          </fig><p>In DS-5 version 5.26.2, the <b>Import</b> creates a
        temporary file "<filepath>/tmp/cadi_config.xml</filepath><i>"</i> that
        needs to be deleted manually so that another model can be run on the
        same server. This issue is fixed in version 5.27.</p><p>The message
        <b>CDB Import Error</b> is shown when the
        "<filepath>/tmp/cadi_config.xml</filepath>" file is not deleted and
        you attempt to <b>Import</b> a new model configuration. To proceed to
        <b>Debug </b>in this case, the file should be deleted by its
        owner.</p><fig>
            <title>CDB Import Error</title>

            <image href="../Graphics/CDB_Import_Error.png" width="510"/>
          </fig></li>

        <li><p>Selecting the <b>Debug</b> button above, opens the <b>Debug
        configurations</b> window as shown in the following image. In the
        <b>Connection</b> tab, select the <b>Multi cluster SMP</b> target
        which is under <b>Imported -&gt; coreSystem -&gt; Bare Metal
        Debug.</b></p><fig>
            <title>Debug Configurations Connection</title>

            <image href="../Graphics/DS5_debug_connect.png" width="500"/>
          </fig><p/></li>

        <li><p>In the <b>Files</b> tab, click on the <b>Workspace</b> and
        select the firmware executable image as shown in the following image,
        which in this case points to:
        <filepath>PM71_85_270_sdk_x.y.z/firmware/release/archsim/sdk.axf</filepath></p><fig>
            <title>Debug Configurations Files</title>

            <image href="../Graphics/DS5_debug_files.png" width="500"/>
          </fig><p/></li>

        <li><p>In the <b>Debugger</b> tab, select <b>Debug from entry
        point</b>, as shown in the following image. Now press <b>Debug</b> to
        launch the debug session.</p><fig>
            <title>Debug Configurations Debugger</title>

            <image href="../Graphics/DS5_debug_launch.png" width="500"/>
          </fig><p/></li>

        <li><p>If the debug launch is successful, DS-5 will switch to the
        <b>Debug Perspective</b>. The following image shows the DS-5 debugger
        connected to the simulator. In the Debug Control window, press the
        icon <image href="../Graphics/DS5_run_button.png" width="20"/>to run the firmware.</p><fig>
            <title>Debug Perspective</title>

            <image href="../Graphics/DS5_debug_window.png" width="550"/>
          </fig><p>At this point, the firmware is up and running in the
        simulator. Now the simulator is ready to accept a connection from
        Hostsim.</p></li>
      </ol>

      <note>Once the debug configuration is created, you can go to the Debug
      Configuration option and select the previously created Debug
      Configuration.</note>
    </body>
  </topic>

  <topic id="topic_Run_the_Hostsim_6j7gg5uwj">
    <title>Run Hostsim</title>

    <body>
      <p>Steps to run Hostsim from a terminal once the firmware has started
      running in the simulator (Archsim):</p>

      <ol>
        <li><p>From the command terminal window, go to the folder
        "<filepath>simulator/hostsim/application/bsim</filepath>" and issue
        the following command <cmdname/></p><p><cmdname>./bsim -p
        &lt;TCP_IP_Port&gt; </cmdname></p><p>The port number "62100" is based
        on the archsim run command parameter TCP_IP_PORT_BASE (See <xref href="#topic_Run_the_Archsim_4j7gg4x63"/>).</p><fig>
            <title>Hostsim Terminal</title>

            <image href="../Graphics/bsim_launch.png" width="500"/>
          </fig><p/></li>

        <li><p>The following image shows the hostsim has completed the PCIe
        and NVMe enumeration.</p><fig>
            <title>Bsim Command Prompt</title>

            <image href="../Graphics/bsim_running.png" width="500"/>
          </fig></li>
      </ol>

      <p/>
    </body>

    <topic id="Firmware_Debug">
      <title>Exercising Firmware with BSim</title>

      <body>
        <p>When the PCIe and NVMe initialization shown in the preceding
        <b>Bsim Command Prompt</b> has been completed, BSim will issue an
        Identify Controller followed by one or more Identify Namespace NVMe
        administration commands to the firmware running on the architectural
        simulator to determine the Solid State Drive (SSD) configuration. When
        the configuration is known, the user is presented with the "BSim
        prompt" as seen below.</p>

        <p><screen>bsim &gt;</screen></p>

        <p>This prompt allows users to specify commands that will be issued to
        the device. Typing <i>help</i> at the BSim prompt will display a list
        of supported commands. The following example commands, if entered in
        order, can be used to create an I/O completion/submission queue pair
        and then issue a write followed by a read to the device.</p>

        <p><b otherprops="bold">Examples:</b></p>

        <p><userinput>bsim &gt; createcplq -q 1</userinput></p>

        <p>Creates a completion queue with the given queue number and default
        queue size.</p>

        <p/>

        <p><userinput>bsim &gt; createsubq -q 1 -c1</userinput></p>

        <p>Creates a submission queue with the given queue number and
        associated completion queue.</p>

        <p/>

        <p><userinput>bsim &gt; write -q 1 -l 0 -b 8 -s</userinput></p>

        <p>Issues a write command to write 8 host LBA’s (-b8) starting from
        LBA 0 (-l0) on submission queue 1 with a seeded data pattern (-s).</p>

        <p/>

        <p><userinput>bsim &gt; read -q 1 -l 0 -b 8 -s</userinput></p>

        <p>Issues read command to read 8 LBAs (-b8) starting from LBA 0 (-l0)
        on submission queue 1 that will verify the seeded data (-s).</p>
      </body>
    </topic>
  </topic>
</topic>