<?xml version="1.0" encoding="utf-8"?><?workdir /C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\temp\temp20181123111806622\Chapters\05_Functional_Description\Topics?><?workdir-uri file:/C:/Git/XDocs-DITA-OT-185/XDocs-DITA-OT-185/DITA-OT1.8.5/temp/temp20181123111806622/Chapters/05_Functional_Description/Topics/?><?path2project ..\..\..\?><?path2project-uri ../../../?><topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="Hitless_ODUflex_Increase_ahi4tj4fo" xml:lang="en-US" ditaarch:DITAArchVersion="1.2" domains="(topic hi-d)                             (topic ut-d)                             (topic indexing-d)                            (topic hazard-d)                            (topic abbrev-d)                            (topic pr-d)                             (topic sw-d)                            (topic ui-d)                            (topic struct-d)                            (topic firmware-d)                            (topic pmcrevhis-d)                            a(props  sp-version)                            a(props  pmc_switch)                            a(props   pmc_package)                            a(props   pmc_phy)                            a(props   ddr-width)                            a(props   package)                            a(props   fw_package)                            a(props   pcie-drive-ports )                            a(props   pcie-host-ports)                            a(props   raid-support )                            a(props   sas-ports )                             a(props   media)                            a(props   component)   " class="- topic/topic " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="topic:1;2:128">
  <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="title:1;3:10">Hitless ODUflex Increase</title>

  <body class="- topic/body " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="body:1;5:9">
    <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:1;6:8">G.HAO increase is handled by first doing LCR to resize the link to the
    final value and then doing BWR to grow the rate into the link gradually
    and then finally coming back to LCR to terminate the entire G.HAO
    protocol. Prior to running the increase protocol all the Nodes in the
    system should know that a G.HAO protocol is going to be run and should
    have ‘expected’ TS growth programmed in their NMS and they should be setup
    to run the protocol. See <xref href="#Hitless_ODUflex_Increase_ahi4tj4fo/G.HAO_Bandwith_Increase_Protocol_bhi4tj4fo" class="- topic/xref " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="xref:1;12:123" type="fig"><?ditaot gentext?>Figure 1</xref>
    for the bandwidth increase sequence diagram.</p>

    <fig id="G.HAO_Bandwith_Increase_Protocol_bhi4tj4fo" class="- topic/fig " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="fig:1;15:58">
      <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="title:2;16:14">G.HAO Bandwith Increase Protocol</title>

      <image href="../Graphics/ghao_bw_increase_protocol.svg" placement="break" width="5.5in" class="- topic/image " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="image:1;18:96"/>
    </fig>

    <note class="- topic/note " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="note:1;21:11"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:2;21:14">In the diagram, [x,y,z] = [CTRL,TPID, TSGS] (for example [NORM,
    #a, NACK]).</p></note>

    <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:3;24:8">The LCR protocol, assuming single stage muxing for this example,
    executes as follows:</p>

    <ol class="- topic/ol " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="ol:1;27:9">
      <li id="d1e82191" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:1;28:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:4;28:28">NMS sets up Node A, B and C into G.HAO mode of
      operation. In turn, each of the nodes' software places the ODTUJ4
      MUX/DMX within the device into G.HAO mode of operation, where now the
      Cnd JC columns of the HO are replaced with RCOH overhead, similarly the
      JC bytes of the LO are RCOH as well.</p></li>

      <li id="d1e82197" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:2;34:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:5;34:28">In the HO OPUk, the node’s software commences G.HAO
      by inserting [IDLE, 0, NACK] with RP=1 on the tribslots of the flex and
      to be added tribslots.</p></li>

      <li id="d1e82203" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:3;38:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:6;38:28">LCR is a Node to Node protocol, so Node A to B can
      negotiate independently of Node B to C. Node A or B can begin the
      negotiation by Software sending [ADD, TPID, NACK] on the newly to be
      added tribslots. Each of the counter-part nodes receive this message and
      check if this is the new tribslots assigned by NMS and then sends back
      an acknowledgment as [ADD,TPID, ACK]. But prior to sending this
      acknowledgment, Node A and B’s Software should prepare its’ FIFOs and
      configurations to accept the NORM command at any time after this
      acknowledgment.</p></li>

      <li id="d1e82209" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:4;48:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:7;48:28">After resizing its FIFOs and standby tribslot
      configurations, the ODTUJ4 MUX sends [ADD, TPID, ACK] and waits to
      receive the same command from the ODTUJ4 DMX. Then in the next RMF, the
      ODTUJ4 MUX sends [NORM, TPID, ACK], and immediately in the next RMF
      after, the ODTUJ4 MUX switches to the new tribslot configuration. The
      ODTUJ4 DMX, at the counterpart Node receives the [NORM,TPID,ACK] and
      will switch over to ODTUJ4 DMX to the new TS configuration automatically
      in the next RMF.</p></li>

      <li id="d1e82215" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:5;57:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:8;57:28">The resize is complete between Node A and B. Node B
      and C can perform steps 1-4 in parallel/before/after. After completing
      resize, each nodes' software sends out [IDLE, 0, NACK] on all the TS of
      the HO where the flex lives in. This ends this portion of LCR.</p></li>
    </ol>

    <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:9;63:8">The BWR protocol executes as follows:</p>

    <ol class="- topic/ol " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="ol:2;65:9">
      <li id="d1e82227" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:6;66:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:10;66:28">After LCR is complete in each node, each node
      enters BWR by relaying TSCC. BWR is a directional protocol (Node A to C
      and Node C to A). Each direction can happen independently.</p></li>

      <li id="d1e82233" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:7;70:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:11;70:28">In Node A-C direction: Software sets TSCC in ODTUJ4
      MUX after placing the SAR into GMP special mode with Node A. Node B
      receives TSCC and enters the SAR block into GMP special mode and then
      relays TSCC to Node C. Similar action happens independently from Node C
      to A. <ph audience="MSCCInternal" class="- topic/ph " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="ph:1;74:41">GMP special mode is realized in the
      device by taking the SAR out of OPSA mode (rate capture based on B +/-1)
      to hold over mode, where the rate is captured based on age of packet
      within the ODUk Switch (that is, indirectly the ODUk Switch fill level).
      For example, if the switch becomes deeper, the age of each packet to the
      SAR block will look older and the SAR block will instruct the ODTUJ4 MUX
      with bigger Cn`s to slowly center the switch.</ph> </p></li>

      <li id="d1e82241" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:8;82:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:12;82:28">Once Node A has TSCC set on both the TX and seen on
      the RX direction, software sets NCS bit in the OPUflex at the TGFP of
      Node A. Software then waits to receive NCS bit enabled in the RGFP,
      which will be initiated by Node C.</p></li>

      <li id="d1e82247" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:9;87:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:13;87:28">After receiving the NCS, Node A and C can begin the
      ramp independently.</p></li>

      <li id="d1e82253" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:10;90:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:14;90:28">Node A commences the ramp, by firmware setting the
      BWR_IND bit in TGFP and then initiating the ramp (after 125us) using the
      ODUk Scheduler in the MAPOTN Subsystem.</p></li>

      <li id="d1e82260" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:11;94:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:15;94:28">Node B receives the BWR_IND bit in RX framer stage
      3B and sends the bit to the SAR, which will begin the ramp after 125 <ph otherprops="symbolfont" class="- topic/ph " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="ph:2;95:104">µ</ph>s as per G.7044. Note that the ODUk
      Scheduler in step 5 and the SAR in step 6, ramp the rate as per G.7044,
      at 512000 kbps^2. Node C follows the same in receiving the same BWR_IND
      bit in-stream of the ODUflex.</p></li>

      <li id="d1e82269" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:12;100:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:16;100:28">Similarly from Node C to A, steps 5 and 6 occur
      independently.</p></li>

      <li id="d1e82275" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:13;103:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:17;103:28">Note that each of the Nodes already has the target
      rate programmed (within ODUk SC and SAR). Once the target rate is
      reached, each of the nodes will end the ramp with an interrupt to
      Software (this is regardless of the state of BWR_IND signal).</p></li>

      <li id="d1e82281" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:14;108:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:18;108:28">Firmware issues ramp done. NMS will see ramp done
      and then complete the end of the ramp phase using software, initially at
      Node A, then takes the Node out of TSCC (i.e. GMP special mode) and
      signals downstream TSCC=0. Each node then upon receiving TSCC=0, exits
      GMP special node and forwards TSCC=0.</p></li>

      <li id="d1e82287" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:15;114:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:19;114:28">Once all nodes are out of GMP special mode and
      TSCC=0. The NCS=0 bit is relayed across from Node A to Node C and then
      Node C to A independently.</p></li>

      <li id="d1e82293" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:16;118:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:20;118:28">After Node A has both TSCC=0 and NCS=0 in RX and TX
      direction, then it exits BWR.</p></li>
    </ol>

    <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:21;122:8">LCR exit executes as follows:</p>

    <ul class="- topic/ul " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="ul:1;124:9">
      <li id="d1e82305" class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="li:17;125:25"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\digi\Chapters\05_Functional_Description\Topics\Hitless_ODUflex_Increase_ahi4tj4fo.xml" xtrc="p:22;125:28">To wrap up G.HAO, Node A sends RP = 0 to Node B and
      Node B sends it back to A. Again since LCR is node to node, Node B to C
      can unset RP independently.</p></li>
    </ul>
  </body>
</topic>