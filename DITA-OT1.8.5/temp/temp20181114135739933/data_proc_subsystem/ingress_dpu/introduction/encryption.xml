<?xml version="1.0" encoding="utf-8"?><?workdir /C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\temp\temp20181114135739933\data_proc_subsystem\ingress_dpu\introduction?><?workdir-uri file:/C:/Git/XDocs-DITA-OT-185/XDocs-DITA-OT-185/DITA-OT1.8.5/temp/temp20181114135739933/data_proc_subsystem/ingress_dpu/introduction/?><?path2project ..\?><?path2project-uri ../?><topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" base="base" id="idpu_encr" xml:lang="en-US" ditaarch:DITAArchVersion="1.2" domains="(topic hi-d)                             (topic ut-d)                             (topic indexing-d)                            (topic hazard-d)                            (topic abbrev-d)                            (topic pr-d)                             (topic sw-d)                            (topic ui-d)                            (topic struct-d)                            (topic firmware-d)                            (topic pmcrevhis-d)                            a(props  sp-version)                            a(props  pmc_switch)                            a(props   pmc_package)                            a(props   pmc_phy)                            a(props   ddr-width)                            a(props   package)                            a(props   fw_package)                            a(props   pcie-drive-ports )                            a(props   pcie-host-ports)                            a(props   raid-support )                            a(props   sas-ports )                             a(props   media)                            a(props   component)   " class="- topic/topic " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="topic:1;2:115">
  <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="title:1;3:10">Encryption Engine</title>

  <body class="- topic/body " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="body:1;5:9">
    <ul class="- topic/ul " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="ul:1;6:9">
      <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="li:1;7:11"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="p:1;7:14"> Encryption engine in the ingress data processing unit performs
      the basic function of encrypting the input data and sends the encrypted
      data to the output port of the ingress data processing subsystem. The
      encryption function is in compliant to FIPS 197 Advanced Encryption
      Standard with key size of 256-bit. <ul class="- topic/ul " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="ul:2;11:46">
          <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="li:2;12:15"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="p:2;12:18">Two AES block cipher modes are supported in the encryption
          engine and they are selected by EncrCipherMode in an ingress inbound
          message request.</p><ul class="- topic/ul " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="ul:3;14:35">
              <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="li:3;15:19"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="p:3;15:22">AES XTS mode - This mode is in compliant to NIST SP
              800-38E (IEEE Std.1619-2007). When the input block size is not
              aligned to 16-byte AES block cipher, cipher text stealing (CTS)
              is used. AES XTS mode uses two AES 256-bit keys, one to tweak
              the value and other for data encryption.</p></li>

              <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="li:4;21:19"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="p:4;21:22">AES ECB mode - This mode is compliant to NIST SP 800-38A.
              The encryption engine does not support ECB cipher text stealing.
              If the input block or data length is not 16-byte block cipher
              aligned, it will be reported as a message error.</p></li>
            </ul></li>

          <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="li:5;27:15"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="p:5;27:18"> The encryption engine supports block based encryption only
          and supports fixed block size, selected by EncrBlkMode in the
          inbound message request. </p><ul class="- topic/ul " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="ul:4;29:44">
              <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="li:6;30:19"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="p:6;30:22">For fixed block size mode, the encryption data block size
              is defined by input block size EncrBlkSize in the inbound
              message request. The block size applies to the whole data
              stream.</p></li>

              <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="li:7;35:19"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="p:7;35:22">The encryption engine supports skip feature, which skips
              the programmed number of bytes (4,8,or 16 bytes by EncrSkipNum
              in the current request message) at the beginning of an
              encryption data block or at the end of encryption data block, as
              shown in the following figure: </p><fig id="fig_idpu_encrskip" class="- topic/fig " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="fig:1;39:78">
                  <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="title:2;40:26">Encryption Skip</title>

                  <image href="../figures/encrskip.svg" width="429" placement="inline" class="- topic/image " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="image:1;42:70"/>
                </fig></li>

              <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="li:8;45:19"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="p:8;45:22">The 128-bit initial tweak value for XTS cipher mode is
              carried in EncrTweakInit field. It is using just the first
              encryption data block. The tweak value or the initial value is
              incremented by 1 per block for other encrypted data
              block.</p></li>
            </ul></li>

          <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="li:9;52:15"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="p:9;52:18"> The data encryption key (DEK) is fetched from a key table
          inside an encryption unit external to the ingress data processing
          subsystem. The DEK used for the current request is addressed by a
          key index EncrDEKIndex in the request message. The DEK key blob
          includes two 256-bit AES keys; DEK1 and DEK2. For XTS cipher mode,
          both DEK1 and DEK2 are used: DEK1 is used for data cipher and DEK2
          is used for tweak cipher. For ECB cipher mode, only DEK1 is used and
          DEK2 is ignored, as shown in the following figure:</p><fig id="fig_idpu_encrdeckblob" class="- topic/fig " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="fig:2;59:97">
              <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="title:3;60:22">DEK Blob</title>

              <image href="../figures/dekblob_dpu.svg" width="435" placement="inline" class="- topic/image " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="image:2;62:69"/>
            </fig><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\encryption.xml" xtrc="p:10;63:22">The DEK integrity check may be enabled by bit
          EncrDEKTagCheck in the request message. If enabled, the key tag from
          the DEK blob is checked with the key tag EncrDEKTagL/H in the
          request message. If there is a mismatch, it will be reported in the
          completion message.</p></li>
        </ul></p></li>
    </ul>
  </body>
</topic>