<?xml version="1.0" encoding="utf-8"?><?workdir /C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\temp\temp20190509171902990\Trident\device\devspec\multicast?><?workdir-uri file:/C:/Git/XDocs-DITA-OT-185/XDocs-DITA-OT-185/DITA-OT1.8.5/temp/temp20190509171902990/Trident/device/devspec/multicast/?><?path2project ..\?><?path2project-uri ../?><topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" ditaarch:DITAArchVersion="1.2" class="- topic/topic " xml:lang="en-US" base="base" id="Multicast_Transparent_MC" domains="(topic hi-d)                             (topic ut-d)                             (topic indexing-d)                            (topic hazard-d)                            (topic abbrev-d)                            (topic pr-d)                             (topic sw-d)                            (topic ui-d)                            (topic struct-d)                            (topic firmware-d)                            (topic pmcrevhis-d)   " status="unchanged" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="topic:1;11:27">
   <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="title:1;14:26">Transparent Multicast</title>
   <body class="- topic/body " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="body:1;17:24">
      <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="p:1;20:21">Switchtec implements transparent Multicast functionality that is fully compliant with the <apiname specification="pci_base_4_0" class="+ topic/keyword pr-d/apiname " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="apiname:1;23:36">PCI Express® Base Specification, Revision 4.0, Section 6.14</apiname>. Switchtec supports 64 MCGs and up to a 264 window size. By definition, the source port does not need to be a member of the MCG in order to send a MultiCast TLP. However, if the source port is a member of the MCG, it will not receive a copy of the TLP since PCIe does not permit Route-To-Self.</p>
      <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="p:2;26:21">The three aspects of Multicast Operation are:</p>
      <ol class="- topic/ol " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="ol:1;29:23">
         <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="li:1;32:26">
            <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="p:3;35:27"> determining if a TLP is a Multicast TLP</p>
         </li>
         <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="li:2;39:26">
            <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="p:4;42:27"> deciding which egress ports are destinations for the TLP</p>
         </li>
         <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="li:3;46:26">
            <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="p:5;49:27"> per port egress processing</p>
         </li>
      </ol>
      <note class="- topic/note " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="note:1;54:27">
         <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="p:6;57:24">Setting the Route-to-Self bit via MRPC will now permit a multicast packet to be routed to itself</p>
      </note>
      <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="p:7;61:21">Multicast TLP Determination is programmed by the Host through <apiname specification="pci_base_4_0" class="+ topic/keyword pr-d/apiname " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="apiname:2;64:36">Multicast Capability</apiname> structure in the P2P Bridge Configuration Space. Alternatively, Multicast configuration can be configured statically using Configuration File fields. Each Function within a partition is expected to be programmed with the same values for <apiname specification="pci_base_4_0" class="+ topic/keyword pr-d/apiname " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="apiname:3;67:36">MC_Base_Address</apiname>, <apiname specification="pci_base_4_0" class="+ topic/keyword pr-d/apiname " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="apiname:4;70:36">MC_Index_Position</apiname>, and <apiname specification="pci_base_4_0" class="+ topic/keyword pr-d/apiname " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="apiname:5;73:36">MC_Num_Group</apiname>, but the switch also supports different values for these fields. The primary determinant of whether or not a memory write or address routed message TLP is a Multicast TLP is its address and the address associated with Multicast address regions within the ingress P2P Bridge.</p>
      <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="p:8;76:21">A Multicast address region may overlap a non-Multicast address region. Multicast TLPs that target a Multicast address region are routed to all MCG members while other TLPs, such as non-posted reads will be routed to only one destination that is possibly different from the destination port for Posted TLP’s from the same source. Some use models can take advantage of this feature to simplify system design.</p>
      <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="p:9;79:21">Multicast TLPs are Posted TLPs and have the same ordering requirements as other posted TLPs, and Multicast TLPs use the same buffering and credits as all other Posted TLPs.</p>
      <section audience="MSCCInternal" class="- topic/section " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="section:1;83:33">
         <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="title:2;86:32">Multicast blocking</title>
         <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="p:10;89:25">Associated with each Multicast group is a “block all” bit. If the block all bit corresponding to the MCG ID associated with a received Multicast TLP is set in the ingress port, then the Multicast TLP is treated as a blocked Multicast TLP.</p>
         <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="p:11;92:25">The block all bits are contained in the ingress port's Multicast Block All (MCBLKALL) fields of the Multicast Block All Low (MCBLKALLL) and Multicast Block All High (MCBLKALLH) registers. Associated with each MCG is a “block untranslated” bit. If the block untranslated bit corresponding to the MCG ID associated with a received Multicast TLP is set in the ingress port and the TLP is untranslated (as determined by the Address Type (AT) field in the TLP header) then the Multicast TLP is treated as a blocked Multicast TLP. The block untranslated bits are contained in the ingress port's Multicast Block Untranslated (MCBLKUT) fields of the Multicast Block Untranslated Low (MCBLKUTL) and Multicast Block Untranslated High (MCBLKUTH) registers. A blocked Multicast TLP is treated in the following manner.</p>
         <ul class="- topic/ul " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="ul:1;95:26">
            <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="li:4;98:29">The TLP is dropped and flow control credits are returned</li>
            <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="li:5;101:29">The error is reported to AER as a MC Blocked TLP error and the header is logged</li>
            <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="li:6;104:29">In an upstream port, the Signaled Target Abort (STAS) bit is set in the PCI Status (PCISTS) Register</li>
            <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="li:7;107:29">In a downstream port, the Signaled Target Abort (STAS) bit is set in the Secondary Status (SECSTS) register</li>
            <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="li:8;110:29">Note that the “block all” and “block untranslated” functions are performed at the ingress port on which the Multicast TLP was received</li>
            <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="li:9;113:29">A received Multicast TLP without errors is forwarded to egress ports as defined below</li>
         </ul>
      </section>
      <section audience="MSCCInternal" class="- topic/section " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="section:2;119:33">
         <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="title:3;122:32">Multicast receive</title>Routing of Multicast TLPs is decided by the configuration of the Multicast Receive (MCRCV) register in each P2P bridge within a switch partition.<p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="p:12;124:25">A Multicast TLP received without error by a function is forwarded as described in this section. Traditional unicast routing rules do not apply to Multicast TLPs. Unlike unicast routing rules that depend on whether the TLP was received on the primary or secondary side of a PCI-to-PCI bridge and are thus different for upstream and downstream ports, Multicast TLP routing is symmetric. The same Multicast routing rules apply to all functions. A Multicast TLP received by a function is forwarded to the virtual PCI bus of the associated switch partition. All functions connected to the virtual PCI bus examine the MCG ID associated with the Multicast TLP and perform the following actions.</p>
         <ul class="- topic/ul " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="ul:2;127:26">
            <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="li:10;130:30">The function on which the Multicast TLP was received ignores the Multicast TLP.</li>
            <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="li:11;133:30">If the Multicast enable (MC_Enable) bit is cleared, then the function ignores the Multicast TLP.</li>
            <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="li:12;136:30">Associated with each function is a Multicast receive vector that contains a bit corresponding to each MCG. If the MC_Enable bit is set and the bit corresponding to the MCG ID associated with the Multicast TLP is set in the Multicast receive vector, then the Multicast TLP is accepted by the function.</li>
            <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="li:13;139:30">The Multicast receive vector is contained in the Multicast Receive (MCRCV) fields of the Multicast Receive Low (MCRCVL) and Multicast Receive High (MCRCVH) registers.</li>
            <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="li:14;142:30">A function that accepts a Multicast TLP forwards the TLP after Multicast egress processing is performed.</li>
            <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="li:15;145:30">For a P2P Bridge, forwarding a TLP means transmitting the TLP on the link associated with the switch port corresponding to the PCI-to-PCI bridge.</li>
            <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="li:16;148:30">If no function accepts a Multicast TLP, then the TLP is silently discarded. This is not an error.</li>
         </ul>
      </section>
      <section audience="MSCCInternal" class="- topic/section " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="section:3;154:33">
         <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="title:4;157:32">Multicast details</title>
         <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="p:13;160:25">The Switchtec architecture implements Multicast processing and routing at the ingress port. Address detection performs Multicast Determination and defines the complete set of egress ports that receive a copy of the Multicast TLP (zero to 48 ports), and the Switch Core duplicates the TLP to all required egress ports. If multiple egress ports are uncongested, the Switch Core can do single copy transfers, which sends a single TLP to multiple subscribed egress ports with no bandwidth expansion. If the egress ports are busy then the Switch Core transfers a copy to each subscribed egress port sequentially. The Switch Core completes transfer of all copies before processing further TLPs from that ingress port.</p>
         <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\multicast\trident_mc_transparent_mc.xml" xtrc="p:14;163:25">Unless otherwise noted, TLP processing associated with a Multicast TLP is the same as that for any other TLP. For example, malformed checks are the same, poison bit processing is the same, ECRC checking and error reporting is the same, and so on. When the Multicast Enable (MCEN) bit is cleared in the Multicast Control (MCCTL) register, Multicast is disabled and no TLP received on the link associated with that port is a Multicast TLP. A TLP determined not to be a Multicast TLP is routed using traditional unicast PCI Express routing rules, thus unroutable “Multicast TLPs” are handled in the same manner as any other unroutable TLP.</p>
      </section>
   </body>
</topic>