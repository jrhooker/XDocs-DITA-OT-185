<?xml version="1.0" encoding="utf-8"?><?workdir /C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\temp\temp20190509171902990\Trident\device\devspec\error_handling?><?workdir-uri file:/C:/Git/XDocs-DITA-OT-185/XDocs-DITA-OT-185/DITA-OT1.8.5/temp/temp20190509171902990/Trident/device/devspec/error_handling/?><?path2project ..\?><?path2project-uri ../?><topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" ditaarch:DITAArchVersion="1.2" class="- topic/topic " xml:lang="en-US" base="base" id="trident_error_handling_cts" domains="(topic hi-d)                             (topic ut-d)                             (topic indexing-d)                            (topic hazard-d)                            (topic abbrev-d)                            (topic pr-d)                             (topic sw-d)                            (topic ui-d)                            (topic struct-d)                            (topic firmware-d)                            (topic pmcrevhis-d)   " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="topic:1;10:468">
   <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="title:1;13:26">Completion Timeout Synthesis</title>
   <body class="- topic/body " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="body:1;16:32">
      <note audience="PMCInternal" class="- topic/note " status="unchanged" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="note:1;21:32">This content was sourced from Saratoga Device Specification Issue 12.00</note>
      <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:1;24:29">Completion Time-out Synthesis (CTS) is a flexible <ph class="- topic/ph " status="unchanged" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="ph:1;27:33">and programmable</ph> feature that is intended to protect the host from a fatal event due to an asynchronous cable removal or any other failure <ph status="deleted" rev="deltaxml-delete" class="- topic/ph " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="ph:2;27:220">where</ph>
         <ph status="new" rev="deltaxml-add" class="- topic/ph " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="ph:3;28:46">when</ph> the EP fails to return a completion. CTS resides in the ingress and egress side of the US port, logging and editing headers as they come in from the Host.</p>
      <ul class="- topic/ul " status="unchanged" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="ul:1;32:30">
         <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="li:1;35:26">When enabled, CTS tracks all non-posted requests and provides <ph class="- topic/ph " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="ph:4;37:29">firmware generated completions (UR, CA, SC-all-1s)</ph>
         </li>
         <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="li:2;41:26">Supports tracking up to 256 non-posted transactions per stack. If the stack contains multiple US ports then the 256-entry Tag Table used for tracking can be divided between them in increments of 32 tags.</li>
      </ul>
      <p class="- topic/p " status="unchanged" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:2;46:29">For every outstanding non-posted request from host to EP where the EP does not return a completion for a configurable time period, the switch synthesizes a user-configured completion to the host. Synthesized completions for configuration requests is selectable via bootstrap. <ph pmc_switch="Advanced Encl_mgmt Encl_mgmt-d" class="- topic/ph " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="ph:5;49:26">On PSX/PAX devices, an interrupt is also generated to FW and an opportunity is provided to customize the CTS response.</ph>
      </p>
      <section class="- topic/section " status="unchanged" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="section:1;54:35">
         <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="title:2;57:32">Example of a normal MemRd / CplD transaction</title>
         <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:3;60:24">In <xref href="#trident_error_handling_cts/fig_Example_of_CTS_in_use_during_a_MRd_excha_ai2s6zqvi" class="- topic/xref " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="xref:1;63:33" type="fig"><?ditaot gentext?>Figure 2</xref> a memory read request from the host targeted through the switch to an EP. The MRd header is captured by the switch and stored in a tag history table. At the same time a new tag is generated and inserted into the TLP. The request is then tracked via the new tag (in purple). The new MRd is sent to the EP using the tag acquired from the CTS Tag Table. When the CpID is returned to the switch by the EP, the switch looks up the tag of the completion, re-inserts the original host tag in the CplD, and then forwards it onto the host.</p>
         <note audience="MSCCInternal" class="- topic/note " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="note:2;67:30">
            <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:4;70:27">Source graphics: http://bby1dms01.pmc-sierra.internal/DocMgmt/fileinfo.cfm?file_id=437682</p>
         </note>
         <fig id="fig_Example_of_CTS_in_use_during_a_normal_MR_9i2s6zqvi" class="- topic/fig " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="fig:1;75:28">
            <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="title:3;78:35">Example of CTS in use during a normal MRd and CplD transaction</title>
            <image href="graphics/trident_error_handling_cts_block.svg" placement="inline" width="6in" class="- topic/image " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="image:1;84:36"/>
         </fig>
         <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:5;88:25"/>
      </section>
      <p pmc_switch="Fanout Fanout-d" class="- topic/p " status="unchanged" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:6;94:29">In the case where a completion does not arrive, the switch synthesizes a CplD to alert the host of a problem without causing an unrecoverable error.</p>
      <note pmc_switch="Advanced Encl_mgmt Encl_mgmt-d" class="- topic/note " status="unchanged" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="note:3;99:32">It is possible for the EP to return multiple partial completions for a single non-posted request. Tag reverse translation is done on all partial completions and the Tag is returned for reuse only upon Tag reverse translation of the last completion. CTS does not check for missing completions for split completion cases.</note>
      <section class="- topic/section " status="unchanged" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="section:2;103:35">
         <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="title:4;106:32">Example of a MemRd where a CplD does not return</title>
         <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:7;109:24">In the case where the host MRd is captured, but the EP does not respond (perhaps due to it being surprise-removed) then the CTS timeout timer will expire. When the timer expires, the switch FW will synthesize a completion (maximum payload is 64-bytes).</p>
         <p pmc_switch="Advanced Encl_mgmt Encl_mgmt-d" class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:8;113:24">An interrupt is sent to the <i pmc_switch="Encl_mgmt" class="+ topic/ph hi-d/i " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="i:1;116:27">PSX</i> processor when a timeout event occurs. The switch will read the requester ID, Address, and Length of the failed transaction from the associated Tag Table entry in order to reconstruct the completion. It will then invalidate the timed-out tag entry.</p>
      </section>
      <note audience="MSCCInternal" class="- topic/note " status="unchanged" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="note:4;122:32">
         <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:9;125:24">Source graphics: http://bby1dms01.pmc-sierra.internal/DocMgmt/fileinfo.cfm?file_id=437682</p>
      </note>
      <fig id="fig_Example_of_CTS_in_use_during_a_MRd_excha_ai2s6zqvi" class="- topic/fig " status="unchanged" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="fig:2;131:31">
         <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="title:5;134:32">Example of CTS in use during a MRd transaction where the CplD never returns</title>
         <image href="graphics/trident_err_cts_expired_replace.svg" placement="inline" width="6in" class="- topic/image " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="image:2;140:33"/>
      </fig>
      <p class="- topic/p " rev="deltaxml-add" status="new" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:10;146:23">The CTS block has a configurable Timer(CTS TS1 Timer) that applies to the entire Stack. This timer value added to the current timestamp is stored into a Timestamp Table. Once a Tag is active, the CTS block stores this timeouttimestampvaluefortheentrytohelpdeterminewhenFirmwareshouldbenotifiedtosynthesize a completion. To check for timeouts, a Timeout Sweeper goes through each timestamp entry and compares valid entries to the current timestamp periodically. If the current timestamp has reached or exceeded the timeout timestamp value, then this indicates an expired Tag. Firmware is notified of this expiry through an interrupt.</p>
      <p class="- topic/p " rev="deltaxml-add" status="new" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:11;151:23">The CTS implementation also has a mechanism to protect from late-arriving completions by triggering a second timer (CTS TS2 Timer) to prevent the reuse of tags after the switch has synthesized a completion. The second timer is used for the following:</p>
      <ul class="- topic/ul " rev="deltaxml-add" status="new" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="ul:2;156:24">
         <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="li:3;159:26">
            <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:12;162:28"> To prevent a TAG from being re-used too quickly (the tag does not return to the Free TAG pool for an additional timeout just in case the completion eventually comes)</p>
         </li>
         <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="li:4;166:26">
            <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:13;169:28"> To allow for a late arriving completion to be forwarded if it arrives before the synthesized completion is ready to go out</p>
         </li>
         <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="li:5;173:26">
            <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:14;176:28"> To nullify any duplicate completions by nullifying the completion the switch receives last. This means the switch will only send the first completion it received and it will nullify any subsequent duplicate.</p>
         </li>
      </ul>
      <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:15;181:22">The CTS tag table is a per stack resource assigned to the upstream ports. <ph audience="MSCCInternal" class="- topic/ph " status="unchanged" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="ph:6;185:33">Each stack has its own 256-entry Tag Table which can be assigned to the ports within the stack. The tag table entries are assigned in blocks of 32 entries. So each port has a multiple of 32 entries. Ports may also be assigned zero (0) entries if CTS is not enabled on that port. No traffic will flow if CTS is enabled and there are zero tags. </ph>
         <ph class="- topic/ph " status="unchanged" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="ph:7;189:33">When the Extended Tag Enable Register bit for a port is set to ‘0’, the port is only capable of using a maximum of 32 Tags. When the Extended Tag Enable Register bit for a port is set to ‘1’, the entire 768 Tags may be allocated to the port. CTS does not return the Tag back to the availability list if the TLP contains an internal error or is nullified.</ph>
      </p>
      <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:16;193:22">CTS must be enabled before the switch has started passing TLPs, including Configuration Cycles. Reference the Configuration File setting for enabling CTS.</p>
      <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:17;196:22">It is part of normal enumeration to have timeouts on configuration requests since this is a way to determine whether there is a device further downstream. When a Config request times out, it could be because the EP is taking longer than the amount of time set by the completion timer in returning the Completion to the Configuration TLP. So, firmware does not synthesize a successful completion when a Configuration request times out. After the first HW timer timeout, firmware starts a firmware timer to track tag status. Firmware timeout value is set to the half of the second HW timer. If EP device does not generate completion before firmware timer expire. firmware timer clears the tag entry. If completion is received from the EP before firmware timer timeout, CTS HW clears the entry belonging to the Tag and Firmware does not do anything.</p>
      <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:18;199:22">CTS is expected to be enabled on systems where all non-posted requests are Configuration Cycles or Management Control transactions. CTS does not track partial completions so it is expected to operate on MemRds that are 64B or less in length.</p>
      <p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="p:19;202:22">
         <note class="- topic/note " status="unchanged" xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\diffed\_b-0-file-\Trident\device\devspec\error_handling\trident_error_handling_cts.xml" xtrc="note:5;206:35">In cases where split completions are used by a host using its internal DMA controller, CTS must be disabled as the switch cannot track split completions and will only synthesize a single completion upstream using the upstream port function B/D/F.</note>
      </p>
   </body>
</topic>