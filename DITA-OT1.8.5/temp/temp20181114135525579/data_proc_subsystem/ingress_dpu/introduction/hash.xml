<?xml version="1.0" encoding="utf-8"?><?workdir /C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\temp\temp20181114135525579\data_proc_subsystem\ingress_dpu\introduction?><?workdir-uri file:/C:/Git/XDocs-DITA-OT-185/XDocs-DITA-OT-185/DITA-OT1.8.5/temp/temp20181114135525579/data_proc_subsystem/ingress_dpu/introduction/?><?path2project ..\?><?path2project-uri ../?><topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" base="base" id="idpu_hash" xml:lang="en-US" ditaarch:DITAArchVersion="1.2" domains="(topic hi-d)                             (topic ut-d)                             (topic indexing-d)                            (topic hazard-d)                            (topic abbrev-d)                            (topic pr-d)                             (topic sw-d)                            (topic ui-d)                            (topic struct-d)                            (topic firmware-d)                            (topic pmcrevhis-d)                            a(props  sp-version)                            a(props  pmc_switch)                            a(props   pmc_package)                            a(props   pmc_phy)                            a(props   ddr-width)                            a(props   package)                            a(props   fw_package)                            a(props   pcie-drive-ports )                            a(props   pcie-host-ports)                            a(props   raid-support )                            a(props   sas-ports )                             a(props   media)                            a(props   component)   " class="- topic/topic " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="topic:1;2:115">
  <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="title:1;3:10">Hash Engine</title>

  <body class="- topic/body " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="body:1;5:9">
    <ul class="- topic/ul " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="ul:1;6:9">
      <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="li:1;7:11"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:1;7:14"> Hash engine in ingress data processing unit performs hashing
      operation as a side effect of the fly by data. The output data stream of
      the hash engine is identical to the input data stream, the hashed
      digest(s) is captured in completion message. </p><ul class="- topic/ul " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="ul:2;10:60">
          <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="li:2;11:15"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:2;11:18"> The secure hashing algorithm implemented in hash engine is
          compliant to FIPS 202 Standard "SHA-3 Standard: Permutation-Based
          Hash and Extendable-Output Functions", August 2015. Two hash
          functions SHA3-256 and SHA3-512 are supported in the hash engine.
          The function SHA3-256 or SHA3-512 is selected by HashAglSel in the
          ingress DPU request message.</p><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:3;16:47"/></li>

          <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="li:3;18:15"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:4;18:18"> The high performance hash engine supports up to 10 GB/s
          throughput for function SHA3-256 and 5 GB/s for function
          SHA3-512.</p><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:5;20:28"/></li>

          <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="li:4;22:15"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:6;22:18"> For data integrity check, two hash engines are implemented,
          the digests from the two engines are compared, if they are not
          matching, the data integrity check status will be set in the
          completion message as shown in the following figure: </p></li>
        </ul><fig id="fig_hash_engine_top" class="- topic/fig " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="fig:1;26:44">
          <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="title:2;27:18">Hash Engine Block</title>

          <image href="../figures/idpu_hash_top_block.svg" placement="inline" class="- topic/image " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="image:1;29:61"/>
        </fig></li>

      <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="li:5;32:11"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:7;32:14"> Hash engine hashes input data stream starting from the offset
      location specified by the HashDataOffset field in the request message.
      Hash engine supports two operation modes: block based hash operation and
      stream based hash operation. Hash operation mode is selected by
      HashOpMode field in the request message.</p><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:8;36:54"> </p><ul class="- topic/ul " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="ul:3;36:63">
          <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="li:6;37:15"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:9;37:18"> For block based operation (HashOpMode = 0 (Block)), see
          <xref href="#idpu_hash/fig_block_based_hash" class="- topic/xref " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="xref:1;38:57" type="fig"><?ditaot gentext?>Figure 2</xref>. The input data
          stream consists of one or multiple data blocks, and depending on the
          HashDataOffset value and input data stream length; it may also have
          offset data portion at the beginning and partial data block at the
          end. Both offset data at the beginning of the input data stream and
          partial data block at the end of the input data stream are skipped
          from hash operation. Hash operation starts with the default initial
          context in the hash engine for each data block and generates one
          digest for each data block. The data block size is fixed for all
          data blocks in the input data stream for the current request and is
          specified by HashBlkSize field in the request message. Optionally,
          hash engine may skip up to some dwords at the end of every data
          block from hashing operation depending on the HashSkipNum value.
          </p><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:10;51:18">Block based operation supports SHA3-256 and SHA3-512
          functions, and total data block number supported is 8 (N&lt;=7) for
          SHA3-256 function and 4 (N&lt;=3) for SHA3-512 function. If the data
          block number is larger than the specified number then request
          message format error will be declared in completion message.</p><fig id="fig_block_based_hash" class="- topic/fig " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="fig:2;55:106">
              <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="title:3;56:22">Block Based Hashing Operation</title>

              <image href="../figures/idpuhashblk.svg" width="714" placement="inline" class="- topic/image " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="image:2;58:69"/>
            </fig></li>

          <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="li:7;61:15"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:11;61:18"> For stream based hashing operation, see <xref href="#idpu_hash/fig_stream_based_hash" class="- topic/xref " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="xref:2;61:106" type="fig"><?ditaot gentext?>Figure 3</xref>. Multiple stream based
          hashing operations can be cascaded such that one digest is generated
          by cascading multiple input data streams from multiple requests.
          There are four operation modes for stream based hash operations
          specified in HashOpMode field in the request message. The first
          operation in cascaded operations (HashOpMode=1 (StartCont)) that
          starts with default context in hash engine and keep the intermediate
          hash context in the hash engine after the operation. The operations
          (HashOpMode=StreamContCont)) between the first and the last
          operations start with the intermediate context in hash engine left
          from the previous operation, and keep the intermediate hash context
          after the current operation. The last operation (HashOpMode=3)
          starts with the intermediate context left from the previous
          operation and generates the final hash digest. For single stream
          based operation (HashOpMode=4(StreamStartEnd)), it starts with
          default context in hash engine and generates the hash digest after
          the operation.</p><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:12;77:32">The stream based operation supports both
          SHA3-256 and SHA3-512 functions. There are two limitations for
          cascaded operations:</p><ul class="- topic/ul " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="ul:4;79:39">
              <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="li:8;80:19"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:13;80:22"> Cascaded stream based operations can not be interleaved
              with other hash operations since context switch is not supported
              in the hash engine.</p></li>

              <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="li:9;84:19"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:14;84:22"> If it is not the last operation (HashOpMode =1 or 2),
              the input data stream size has to be multiple of 132 bytes for
              function SHA3-256 or 72 bytes for function SHA3-512. This is
              because hash engine does not support input data residuals for
              cascaded operations.</p></li>
            </ul><fig id="fig_stream_based_hash" class="- topic/fig " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="fig:3;89:50">
              <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="title:4;90:22">Stream Based Hashing Operation</title>

              <image href="../figures/idpuhashstr.svg" width="667" placement="inline" class="- topic/image " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="image:3;92:69"/>
            </fig></li>
        </ul><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:15;94:17"> </p></li>

      <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="li:10;96:11"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:16;96:14"> Hash engine is used for HMAC-SHA3-256 and HMAC-SHA3-512 digest
      generation with multiple steps. The algorithm is complaint to FIPS 198-1
      2008 but with SHA3-256/512 function for hashing steps. An HMAC operation
      uses the following formula: </p><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:17;99:42">HMAC(K, text) = H((K0 XOR opad) ||
      H((K0 XOR ipad) || text))</p><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:18;100:40"/><simpletable relcolwidth="112* 888*" class="- topic/simpletable " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="simpletable:1;100:77">
          <strow class="- topic/strow " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="strow:1;101:18">
            <stentry class="- topic/stentry " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="stentry:1;102:22">K</stentry>

            <stentry class="- topic/stentry " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="stentry:2;104:22">The MAC Key</stentry>
          </strow>

          <strow class="- topic/strow " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="strow:2;107:18">
            <stentry class="- topic/stentry " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="stentry:3;108:22">text</stentry>

            <stentry class="- topic/stentry " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="stentry:4;110:22">The input message to be hashed</stentry>
          </strow>

          <strow class="- topic/strow " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="strow:3;113:18">
            <stentry class="- topic/stentry " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="stentry:5;114:22">K0</stentry>

            <stentry class="- topic/stentry " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="stentry:6;116:22">The preprocessed MAC Key: Padded with zero from K is the
            length of K is less than the block size, or hashed key if the
            length of K is more than the block size.</stentry>
          </strow>

          <strow class="- topic/strow " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="strow:4;121:18">
            <stentry class="- topic/stentry " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="stentry:7;122:22">B</stentry>

            <stentry class="- topic/stentry " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="stentry:8;124:22">The block size in bytes of the used algorithm: 136-byte
            for SHA3-256, 72-byte for SHA3-512</stentry>
          </strow>

          <strow class="- topic/strow " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="strow:5;128:18">
            <stentry class="- topic/stentry " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="stentry:9;129:22">ipad</stentry>

            <stentry class="- topic/stentry " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="stentry:10;131:22">Inner hash pad value: 0x36 repeated B (block size)
            times</stentry>
          </strow>

          <strow class="- topic/strow " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="strow:6;135:18">
            <stentry class="- topic/stentry " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="stentry:11;136:22">opad</stentry>

            <stentry class="- topic/stentry " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="stentry:12;138:22">Outer hash pad value: 0x5c repeated B (block size)
            times</stentry>
          </strow>

          <strow class="- topic/strow " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="strow:7;142:18">
            <stentry class="- topic/stentry " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="stentry:13;143:22">||</stentry>

            <stentry class="- topic/stentry " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="stentry:14;145:22">Concatenation</stentry>
          </strow>

          <strow class="- topic/strow " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="strow:8;148:18">
            <stentry class="- topic/stentry " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="stentry:15;149:22">H</stentry>

            <stentry class="- topic/stentry " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="stentry:16;151:22">Hash Function SHA3-256 or SHA3-512</stentry>
          </strow>
        </simpletable><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:19;153:26">The HMAC operation consists of three steps. The first
      part is the MAC Key processing. The second part is the inner hash
      operation and as final step the outer hash operation is performed.
      Firmware is responsible to perform all the three steps and generates the
      hash request messages for hash operations by hash engine in the last two
      steps. </p></li>

      <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="li:11;160:11"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:20;160:14"> If hash engine is the only enabled data processing engine in the
      ingress DPU, and no output data stream is needed, a dummy destination
      SGL is defined in the request message with DestMemDumpX set to 1 in
      every SGL element in the dummy destination SGL.</p><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:21;163:62"/></li>

      <li class="- topic/li " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="li:12;165:11"><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:22;165:14"> The hash digests generated by hash engine are part of completion
      message. Depending the digest number, which is less or equal to 8, and
      compression meta data number, which is less than or equal to 9 whenever
      hash operation is enabled, the completion message format and length
      varies. When there is only one SHA3-256 digest generated, Digest 0 can
      be located at offset of 8 dwords or 16 dwords in the completion message,
      selected by HASHDigest0Offset in the request message. With 8 dwords
      offset option, the digest 0 is in the 64-byte cache line of the
      completion message, that optimizes the completion message transfer and
      processing. For various digest numbers, the completion message formats
      are shown in <xref href="#idpu_hash/fig_hash_digest_format" class="- topic/xref " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="xref:3;175:68" type="fig"><?ditaot gentext?>Figure 4</xref> for
      SHA3-256 and <xref href="#idpu_hash/fig_hash_digest_format_512" class="- topic/xref " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="xref:4;176:72" type="fig"><?ditaot gentext?>Figure 5</xref> for
      SHA3-512. </p><fig id="fig_hash_digest_format" class="- topic/fig " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="fig:4;177:54">
          <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="title:5;178:18">SHA3-256 Hash Digest Formats in Completion Message</title>

          <image href="../figures/idpuhashdigestfmt.svg" width="664" placement="inline" class="- topic/image " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="image:4;180:71"/>
        </fig><fig id="fig_hash_digest_format_512" class="- topic/fig " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="fig:5;181:52">
          <title class="- topic/title " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="title:6;182:18">SHA3-512 Hash Digest Formats in Completion Message</title>

          <image href="../figures/idpuhashdigestfmt512.svg" width="664" placement="inline" class="- topic/image " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="image:5;184:74"/>
        </fig><p class="- topic/p " xtrf="C:\Git\XDocs-DITA-OT-185\XDocs-DITA-OT-185\DITA-OT1.8.5\samples\morristown\data_proc_subsystem\ingress_dpu\introduction\hash.xml" xtrc="p:23;185:19"/></li>
    </ul>
  </body>
</topic>